version: '3.9'

services:
  db:
    image: postgres:16.1-alpine
    restart: always
    env_file: .env
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    volumes:
      - db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_DB: ${DATABASE_DBNAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - beaver
  redis:
    image: redis:latest
    restart: always
    env_file: .env
    volumes:
      - ./data/redis:/data
    ports:
      - 6379:6379
    networks:
      - beaver
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - beaver
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_MGMT_PORT}:${RABBITMQ_MGMT_PORT}
    networks:
      - beaver
  api:
    restart: always
    build:
      dockerfile: ./api/Dockerfile
      context: .
      target: dev
    env_file: .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
      - redis
      - rabbitmq
      - mailhog
    links:
      - db
      - redis
    volumes:
      - ./api:/opt/api
    environment:
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_PORT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DBNAME: ${API_DATABASE_DBNAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JWT_SECRET: ${API_JWT_SECRET}
      SESSION_KEY: ${API_SESSION_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    networks:
      - beaver
  
  laravel:
    build:
      args:
        user: beaver
        uid: 1000
      context: .
      dockerfile: ./laravel-app/Dockerfile
    restart: unless-stopped
    env_file:
      - ./laravel-app/.env
    volumes:
      - ./laravel-app:/var/www/html
    depends_on:
      - db
      - redis
      - rabbitmq
      - mailhog
    networks:
      - beaver

  nginx:
    image: nginx:latest
    volumes:
      - ./laravel-app:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    depends_on:
      - laravel
    networks:
      - beaver

  migrate: &basemigrate
    profiles: ["tools"]
    image: migrate/migrate
    entrypoint: "migrate -database postgres://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@db/${API_DATABASE_DBNAME}?sslmode=disable -path /tmp/migrations"
    command: up
    depends_on:
      - db
    links:
      - db
    volumes:
      - ./api/migrations:/tmp/migrations
    networks:
      - beaver

  create-migration:
    <<: *basemigrate
    entrypoint: migrate create -dir /tmp/migrations -ext sql
    command: ""

volumes:
  db:
    driver: local

networks:
  beaver:
    name: beaver
    driver: bridge